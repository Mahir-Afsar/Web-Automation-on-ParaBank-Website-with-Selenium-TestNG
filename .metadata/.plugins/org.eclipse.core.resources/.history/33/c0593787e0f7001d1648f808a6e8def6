package testCasesPackage;

import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

import basePackage.DriverSetup;
import pageObjectPackage.PO_001_HomePage;
import pageObjectPackage.PO_004_AccountsOverview;
import pageObjectPackage.PO_005_OpenNewAccountPage;
import pageObjectPackage.PO_006_OpenAccountPage;
import pageObjectPackage.PO_007_TransferFundsPage;
import pageObjectPackage.PO_008_AccountDetailsPage;
import pageObjectPackage.PO_009_FindTransactionsPage;
import testDataPackage.DataSet;

public class TC002_Login_CreateAccount_TransferMoney extends DriverSetup{
	
	@Test(dataProvider = "userInfo",dataProviderClass = DataSet.class)
	public void login_CreateAccount_TranferMoney(String userName, String password) throws InterruptedException {
		
		SoftAssert softAssert = new SoftAssert();
		PO_001_HomePage homePage = new PO_001_HomePage(driver);
		PO_004_AccountsOverview accountsOverviewPage = new PO_004_AccountsOverview(driver);
		PO_005_OpenNewAccountPage openNewAccountPage = new PO_005_OpenNewAccountPage(driver);
		PO_006_OpenAccountPage openAccountPage = new PO_006_OpenAccountPage(driver);
		PO_007_TransferFundsPage tranferFundsPage = new PO_007_TransferFundsPage(driver);
		PO_008_AccountDetailsPage accountDetailsPage = new PO_008_AccountDetailsPage(driver);
		PO_009_FindTransactionsPage findTransactionsPage = new PO_009_FindTransactionsPage(driver); 
		
		String checkingAccountValue = "0";
		String savingAccountValue = "1";
		String transferMoney = "50";
		
		
		// fill the login information
		homePage.fillLoginInformation(userName, password);
		
		//click on login button
		homePage.clickOnLoginButton();
		
		//Assertion of Accounts Overview page
		softAssert.assertEquals(accountsOverviewPage.getTitle(driver), accountsOverviewPage.accountsOverviewTitle);
		
//		Thread.sleep(3000);
		accountsOverviewPage.waitForElement(driver, accountsOverviewPage.existingAccountFieldBy);
		String existingAccountNumberByDefault1 = accountsOverviewPage.existingAccountField.getText();
		
		//Click on Open new Account
		accountsOverviewPage.clickOnOpenNewAccount();
		
//		Thread.sleep(3000);
		
		//select checking account
		openNewAccountPage.waitForElement(driver, openNewAccountPage.typeOfAccountFieldBy);
		openNewAccountPage.selectTypeOfAccount(checkingAccountValue);
		
		//select existing by default account
		Thread.sleep(3000);
		openNewAccountPage.waitForElement(driver, openNewAccountPage.existingAccountFieldOnNewAccountPageBy);
		openNewAccountPage.existingAccountNumber(existingAccountNumberByDefault1);
		
		//click on open a new account button
		openNewAccountPage.clickOnOpenNewAccountButton();
//		Thread.sleep(3000);
		
		// open account page 
		// get checking account number
		openAccountPage.waitForElement(driver, openAccountPage.newAccountIdValueFieldBy);
		String checkingAccountNumber = openAccountPage.newAccountIdValueField.getText();
		System.out.println("checkingAccountNumber: " + checkingAccountNumber);
//		Thread.sleep(3000);
		
		//click on accounts overview
		openAccountPage.clickOnAccountsOverview();
		
//		Thread.sleep(3000);
		//get first account number
		accountsOverviewPage.waitForElement(driver, accountsOverviewPage.defaultExistingAccountNumberBy);
		String defaultExistingAccountNumber2 = accountsOverviewPage.defaultExistingAccountNumber.getText();
		
		//Click on Open new Account
		accountsOverviewPage.clickOnOpenNewAccount();
		
		//select saving account
		openNewAccountPage.waitForElement(driver, openNewAccountPage.typeOfAccountFieldBy);
		openNewAccountPage.selectTypeOfAccount(savingAccountValue);
		
//		Thread.sleep(3000);
		//select existing by default account
		Thread.sleep(1000);
		openNewAccountPage.waitForElement(driver, openNewAccountPage.existingAccountFieldOnNewAccountPageBy);
		openNewAccountPage.existingAccountNumber(defaultExistingAccountNumber2);
		
		//click on open a new account button
		openNewAccountPage.clickOnOpenNewAccountButton();
//		Thread.sleep(3000);
		
		// open account page 
		// get saving account number 1
		openAccountPage.waitForElement(driver, openAccountPage.newAccountIdValueFieldBy);
		String savingAccountNumber1 = openAccountPage.newAccountIdValueField.getText();
		System.out.println("savingAccountNumber 1: " + savingAccountNumber1);
//		Thread.sleep(3000);
		
		//click on accounts overview
		openAccountPage.clickOnAccountsOverview();
		
//		Thread.sleep(3000);
		//get first account number
		accountsOverviewPage.waitForElement(driver, accountsOverviewPage.defaultExistingAccountNumberBy);
		String defaultExistingAccountNumber3 = accountsOverviewPage.defaultExistingAccountNumber.getText();
	
		//Click on Open new Account
		accountsOverviewPage.clickOnOpenNewAccount();
	
		//select saving account
		openNewAccountPage.waitForElement(driver, openNewAccountPage.typeOfAccountFieldBy);
		openNewAccountPage.selectTypeOfAccount(savingAccountValue);
		
//		Thread.sleep(3000);
		//select existing by default account
		openNewAccountPage.waitForElement(driver, openNewAccountPage.existingAccountFieldOnNewAccountPageBy);
		openNewAccountPage.existingAccountNumber(defaultExistingAccountNumber3);
		
		//click on open a new account button
		openNewAccountPage.clickOnOpenNewAccountButton();
		
//		Thread.sleep(4000);
		// get saving account number 2
		openAccountPage.waitForElement(driver, openAccountPage.newAccountIdValueFieldBy);
		String savingAccountNumber2 = openAccountPage.newAccountIdValueField.getText();
		System.out.println("savingAccountNumber 2: " + savingAccountNumber2);
		
//		Thread.sleep(4000);
		// click on transfer funds
		openAccountPage.clickOnTansferFunds();
			
//		Thread.sleep(4000);
		// fill the transfer amount
		tranferFundsPage.waitForElement(driver, tranferFundsPage.amountFieldBy);
		tranferFundsPage.tranferAmount(transferMoney);
		
//		Thread.sleep(4000);
		// select from account value
		tranferFundsPage.waitForElement(driver, tranferFundsPage.fromAccountIdFieldBy);
		tranferFundsPage.selectFromAccountValue(defaultExistingAccountNumber3);
		
//		Thread.sleep(4000);
		// select to account value (saving account)
		tranferFundsPage.waitForElement(driver, tranferFundsPage.toAccountIdFieldBy);
		tranferFundsPage.selectToAccountValue(savingAccountNumber2);
		
		// click on transfer
		tranferFundsPage.clickOnTranferButton();
		
		// click on accountOverview
		openAccountPage.clickOnAccountsOverview();
		
		//click on the saving account
		accountsOverviewPage.clickOnNewSavingAccount();
		
		//click on the funds transfer received
		accountDetailsPage.clickOnFundsTransferRecievedField();
		
		// get the transaction id
//		Thread.sleep(4000);
		accountDetailsPage.waitForElement(driver, accountDetailsPage.transactionIdFieldBy);
		String transactionIdOfSavingAccount = accountDetailsPage.transactionIdField.getText();
		
		// click on find transaction
		accountDetailsPage.clickOnFindTransaction();
		
		//select an account
//		Thread.sleep(4000);
		findTransactionsPage.waitForElement(driver, findTransactionsPage.selectAnAccountFieldBy);
		findTransactionsPage.selectAnAccout(savingAccountNumber2);
		
		// give the transaction id into find by transaction
//		Thread.sleep(4000);
		findTransactionsPage.waitForElement(driver, findTransactionsPage.findByTransactionIDFieldBy);
		findTransactionsPage.fillFindbyTransactionID(transactionIdOfSavingAccount);
		
		//Click on FindTransactions
		findTransactionsPage.clickOnFindTransactions();
		
		Thread.sleep(4000);
		
		
	}
}
